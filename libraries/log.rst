=========
日志类
=========


::

    遵循PSR3规范，并附加了静态方法调用


+-------------+----------+
|属性         |值        |
+=============+==========+
|命名空间     |fize\\log |
+-------------+----------+
|类名         |Log       |
+-------------+----------+


:方法:


+-----------------+----------------------------+
|方法名           |说明                        |
+=================+============================+
|`__construct()`_ |常规调用请先初始化          |
+-----------------+----------------------------+
|`getInstance()`_ |新建实例                    |
+-----------------+----------------------------+
|`emergency()`_   |系统无法使用                |
+-----------------+----------------------------+
|`alert()`_       |必须立即采取行动            |
+-----------------+----------------------------+
|`critical()`_    |临界条件                    |
+-----------------+----------------------------+
|`error()`_       |运行时错误                  |
+-----------------+----------------------------+
|`warning()`_     |例外事件不是错误            |
+-----------------+----------------------------+
|`notice()`_      |正常但重要的事件            |
+-----------------+----------------------------+
|`info()`_        |有趣的事件                  |
+-----------------+----------------------------+
|`debug()`_       |详细的调试信息              |
+-----------------+----------------------------+
|`log()`_         |可任意级别记录日志          |
+-----------------+----------------------------+


方法
======
__construct()
-------------
常规调用请先初始化

.. code-block:: php

  public function __construct (
      string $handler,
      array $config = []
  )


:参数:
  +--------+----------------------------+
  |名称    |说明                        |
  +========+============================+
  |handler |使用的实际接口名称          |
  +--------+----------------------------+
  |config  |配置项                      |
  +--------+----------------------------+
  
  


getInstance()
-------------
新建实例

.. code-block:: php

  public static function getInstance (
      string $handler,
      array $config = []
  ) : \fize\log\LogHandler


:参数:
  +--------+----------------------------+
  |名称    |说明                        |
  +========+============================+
  |handler |使用的实际接口名称          |
  +--------+----------------------------+
  |config  |配置项                      |
  +--------+----------------------------+
  
  


emergency()
-----------
系统无法使用

.. code-block:: php

  public static function emergency (
      string $message,
      array $context = []
  )


:参数:
  +--------+----------------+
  |名称    |说明            |
  +========+================+
  |message |日志内容        |
  +--------+----------------+
  |context |占位符内容      |
  +--------+----------------+
  
  


alert()
-------
必须立即采取行动

.. code-block:: php

  public static function alert (
      string $message,
      array $context = []
  )


:参数:
  +--------+----------------+
  |名称    |说明            |
  +========+================+
  |message |日志内容        |
  +--------+----------------+
  |context |占位符内容      |
  +--------+----------------+
  
  


::

    例如: 整个网站宕机了，数据库挂了，等等。 这应该发送短信通知警告你.


critical()
----------
临界条件

.. code-block:: php

  public static function critical (
      string $message,
      array $context = []
  )


:参数:
  +--------+----------------+
  |名称    |说明            |
  +========+================+
  |message |日志内容        |
  +--------+----------------+
  |context |占位符内容      |
  +--------+----------------+
  
  


::

    例如: 应用组件不可用，意外的异常。


error()
-------
运行时错误

.. code-block:: php

  public static function error (
      string $message,
      array $context = []
  )


:参数:
  +--------+----------------+
  |名称    |说明            |
  +========+================+
  |message |日志内容        |
  +--------+----------------+
  |context |占位符内容      |
  +--------+----------------+
  
  


::

    运行时错误不需要马上处理，但通常应该被记录和监控。


warning()
---------
例外事件不是错误

.. code-block:: php

  public static function warning (
      string $message,
      array $context = []
  )


:参数:
  +--------+----------------+
  |名称    |说明            |
  +========+================+
  |message |日志内容        |
  +--------+----------------+
  |context |占位符内容      |
  +--------+----------------+
  
  


::

    例如: 使用过时的API，API使用不当，不合理的东西不一定是错误。


notice()
--------
正常但重要的事件

.. code-block:: php

  public static function notice (
      string $message,
      array $context = []
  )


:参数:
  +--------+----------------+
  |名称    |说明            |
  +========+================+
  |message |日志内容        |
  +--------+----------------+
  |context |占位符内容      |
  +--------+----------------+
  
  


info()
------
有趣的事件

.. code-block:: php

  public static function info (
      string $message,
      array $context = []
  )


:参数:
  +--------+----------------+
  |名称    |说明            |
  +========+================+
  |message |日志内容        |
  +--------+----------------+
  |context |占位符内容      |
  +--------+----------------+
  
  


::

    例如: 用户登录，SQL日志。


debug()
-------
详细的调试信息

.. code-block:: php

  public static function debug (
      string $message,
      array $context = []
  )


:参数:
  +--------+----------------+
  |名称    |说明            |
  +========+================+
  |message |日志内容        |
  +--------+----------------+
  |context |占位符内容      |
  +--------+----------------+
  
  


log()
-----
可任意级别记录日志

.. code-block:: php

  public static function log (
      string $level,
      string $message,
      array $context = []
  )


:参数:
  +--------+----------------+
  |名称    |说明            |
  +========+================+
  |level   |日志级别        |
  +--------+----------------+
  |message |日志内容        |
  +--------+----------------+
  |context |占位符内容      |
  +--------+----------------+
  
  


